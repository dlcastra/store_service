version: '3.8'

services:
  web:
    build: .
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
    #      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      run_db_migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      celery:
        condition: service_started
      celery-beat:
        condition: service_started
      broker:
        condition: service_healthy

  run_db_migrations:
    build: .
    restart: no
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
    depends_on:
      db:
        condition: service_healthy
    command: "python /app/manage.py migrate"

  db:
    image: postgres:16.2
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=docker_store_service
      - POSTGRES_PASSWORD=password
    expose:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10

  celery:
    build:
      context: .
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@broker:5672/
    command: celery -A core worker -l INFO
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  celery-beat:
    build:
      context: .
    env_file:
      - .env
    command: celery -A core beat --loglevel=info
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  broker:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 30s
      timeout: 30s
      retries: 10

volumes:
  db-data:
  rabbitmq_data: